,label,n_words_in_Title,n_words_in_Abstract,text,text_clean,Conference Paper,Veado L,Silva PC,Khandelwal S,Sripada SK,Cheiran JF,de M. Rodrigues E,da Silva JP,Kolpondinos MZ,Glinz M,Hof S,Landolt M,Fouché S,Xie T,Bishop J,de Halleux J,Korn O,Hörz T,Maggiorini D,Ripamonti L,Figueira Filho F,Storey MA,Schneider K,Qu W,Wang M,Colteli O,Grandi X,Latorre P,Sánchez JS,Lizán LV,Ros-Bernal F,Martínez-Cadenas C,Álvarez MC,Gasca-Hurtado GP,Guilabert TS,Bernik A,Radošević D,d. Halleux J,Hernández L,Peña A,Rangel N,Torres C,Manrique-Losada B,Jimenez DG,Law FL,Kasirun ZM,Rojas JM,Giorgini P,Raij A,Alqasemi R,Dubey R,LaToza TD,Ben Towne W,van der Hoek A,Reise C,Seliger G,Conger S,Dodero JM,García-Domínguez A,Faghihi U,Brown A,Maldonado-Bouchard S,Sekar B,Sheth S,Palacios MG,Mora A,Arnedo-Moreno J,Matsubara PG,Silva CL,Kheirkhahzadeh AD,Fotaris P,Gondova V,Labaj M,Dubois DJ,Tamburrelli G,Chirila C,Raes R,Roland A,van Eekelen MC,Hagel G,publication_date_2011,publication_date_2012,publication_date_2013,publication_date_2014,publication_date_2015,publication_date_2016
0,0,12,161,"Games for Learning: Bridging Game-related Education Methods to Software Enginering Knowledge Areas The use of games in software engineering education is not new. However, recent technologies have provided new opportunities for using games and their elements to enhance learning and student engagement. The goal of this paper is twofold. First, we discuss how game related methods have been used in the context of software engineering education by means of a systematic mapping study. Second, we investigate how these game related methods support specific knowledge areas from software engineering. The systematic mapping study identified 106 primary studies describing the use of serious games, gamification and game development in software engineering education. Based on this mapping, we aimed to track the learning goals of each primary study to the knowledge areas defined in ACM/IEEE curricular recommendations. As a result, we observed that ""Software Process"", ""Software Design"" and ""Profession Practice"" are the most recurring knowledge areas explored by game related approaches in software engineering education. We also uncover possible research opportunities for game-related education methods. game development based learning, game-based learning, gamification, software engineering education",games for learning bridging game related education methods to software enginering knowledge areas the use of games in software engineering education is not new however recent technologies have provided new opportunities for using games and their elements to enhance learning and student engagement the goal of this paper is twofold first we discuss how game related methods have been used in the context of software engineering education by means of a systematic mapping study second we investigate how these game related methods support specific knowledge areas from software engineering the systematic mapping study identified 106 primary studies describing the use of serious games gamification and game development in software engineering education based on this mapping we aimed to track the learning goals of each primary study to the knowledge areas defined in acm ieee curricular recommendations as a result we observed that software process software design and profession practice are the most recurring knowledge areas explored by game related approaches in software engineering education we also uncover possible research opportunities for game related education methods game development based learning game based learning gamification software engineering education,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
1,0,7,143,"Gamification Applied for Software Engineering Teaching-learning Process In specialization courses, normally, the students have concepts from some subjects already consolidated in the undergraduate program. To motivate these students in those disciplines is a challenge to the teacher. The use of ""gamification"" concepts, that is, application of games in activities that are not games per se, is a methodological solution for the motivation in the classes. In order to evaluate the usage of this technique, an experiment was conducted with a Software Engineering specialization class. The class was divided into teams and through various play activities, the executed works were being scored. Three teaching methodologies were applied: Learning based in problems, based in projects and mental maps. At the end of the course a questionnaire was applied so that the students could evaluate the methodology. The obtained results were satisfactory, because there was a greater engagement of the students during class. Gamification, active methodology, case tools, educational games, software engineering",gamification applied for software engineering teaching learning process in specialization courses normally the students have concepts from some subjects already consolidated in the undergraduate program to motivate these students in those disciplines is a challenge to the teacher the use of gamification concepts that is application of games in activities that are not games per se is a methodological solution for the motivation in the classes in order to evaluate the usage of this technique an experiment was conducted with a software engineering specialization class the class was divided into teams and through various play activities the executed works were being scored three teaching methodologies were applied learning based in problems based in projects and mental maps at the end of the course a questionnaire was applied so that the students could evaluate the methodology the obtained results were satisfactory because there was a greater engagement of the students during class gamification active methodology case tools educational games software engineering,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
2,0,4,210,"Gamification for Teaching Java The term 'gamification' refers to the use of game elements in non-game environments like education, business, sales and marketing. The method of 'gamifying' has been applied in many different contexts and for many different reasons; for instance, in order to improve productivity, to increase sales, to motivate employees and customers, et al. In recent years, educators began to investigate the effects of different gamification elements within the context of education. There has been a considerable debate regarding the actual effects of gamification on the intrinsic motivation of students towards learning, and many research have been conducted in order to discover the results of 'gamifying' any specific course curriculum. Each research study has revealed another impediment, supported by multiple review studies that revealed significant problems with some of the methods of majority of studies in the research area now known as the 'gamification of education'. This paper explains the design, analysis and implementation process of an open-source gamification platform, which is aimed at providing a gamification platform for education, while also explaining a preliminary survey conducted on an Introduction to Java course. The platform was developed using multiple technologies and frameworks related to the Java programming language while the survey was conducted at third level education students through a quantitative questionnaire. Education, Gamification, Gamifying Education, Java Education, Software Engineering",gamification for teaching java the term gamification refers to the use of game elements in non game environments like education business sales and marketing the method of gamifying has been applied in many different contexts and for many different reasons for instance in order to improve productivity to increase sales to motivate employees and customers et al in recent years educators began to investigate the effects of different gamification elements within the context of education there has been a considerable debate regarding the actual effects of gamification on the intrinsic motivation of students towards learning and many research have been conducted in order to discover the results of gamifying any specific course curriculum each research study has revealed another impediment supported by multiple review studies that revealed significant problems with some of the methods of majority of studies in the research area now known as the gamification of education this paper explains the design analysis and implementation process of an open source gamification platform which is aimed at providing a gamification platform for education while also explaining a preliminary survey conducted on an introduction to java course the platform was developed using multiple technologies and frameworks related to the java programming language while the survey was conducted at third level education students through a quantitative questionnaire education gamification gamifying education java education software engineering,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
3,0,4,204,"Gamification of Software Testing Writing good software tests is difficult, not every software developer's favorite occupation, and not a prominent aspect in programming education. However, human involvement in testing is unavoidable: What makes a test good is often down to intuition; what makes a test useful depends on an understanding of the program context; what makes a test find bugs depends on understanding the intended program behaviour. Because the consequences of insufficient testing can be dire, this paper explores a new angle to address the testing problem: Gamification is the approach of converting potentially tedious or boring tasks to components of entertaining gameplay, where the competitive nature of humans motivates them to compete and excel. By applying gamification concepts to software testing, there is potential to fundamentally change software testing in several ways: First, gamification can help to overcome deficiencies in education, where testing is a highly neglected topic. Second, gamification engages practitioners in testing tasks they would otherwise neglect, and gets them to use advanced testing tools and techniques they would otherwise not consider. Finally, gamification makes it possible to crowdsource complex testing tasks through games with a purpose. Collectively, these applications of gamification have the potential to substantially improve software testing practice, and thus software quality. Games, Education, Programming profession, Software, computer games, computer science education, program debugging, program testing, software quality, software testing gamification, software bugs, program behaviour, gameplay, programming education, complex testing task crowdsourcing, software quality improvement",gamification of software testing writing good software tests is difficult not every software developer s favorite occupation and not a prominent aspect in programming education however human involvement in testing is unavoidable what makes a test good is often down to intuition what makes a test useful depends on an understanding of the program context what makes a test find bugs depends on understanding the intended program behaviour because the consequences of insufficient testing can be dire this paper explores a new angle to address the testing problem gamification is the approach of converting potentially tedious or boring tasks to components of entertaining gameplay where the competitive nature of humans motivates them to compete and excel by applying gamification concepts to software testing there is potential to fundamentally change software testing in several ways first gamification can help to overcome deficiencies in education where testing is a highly neglected topic second gamification engages practitioners in testing tasks they would otherwise neglect and gets them to use advanced testing tools and techniques they would otherwise not consider finally gamification makes it possible to crowdsource complex testing tasks through games with a purpose collectively these applications of gamification have the potential to substantially improve software testing practice and thus software quality games education programming profession software computer games computer science education program debugging program testing software quality software testing gamification software bugs program behaviour gameplay programming education complex testing task crowdsourcing software quality improvement,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
4,0,10,111,"Impact of Gamification on Code Review Process: An Experimental Study Researchers have supported the idea of gamification to enhance students' interest in activities like code reviews, change management, knowledge management, issue tracking, etc. which might otherwise be repetitive and monotonous. We performed an experimental study consisting of nearly 180+ participants to measure the impact of gamification on code review process using 5 different code review tools, including one gamified code review instance from our extensible architectural framework. We assess the impact of gamification based on the code smells and bugs identified in a gamified and non-gamified environment as per code inspection report. Further, measurement and comparison of the quantity and usefulness of code review comments was done using machine learning techniques. Architectural Framework, Classification, Code Reviews, Evaluation, Gamification, Text Analysis",impact of gamification on code review process an experimental study researchers have supported the idea of gamification to enhance students interest in activities like code reviews change management knowledge management issue tracking etc which might otherwise be repetitive and monotonous we performed an experimental study consisting of nearly 180 participants to measure the impact of gamification on code review process using 5 different code review tools including one gamified code review instance from our extensible architectural framework we assess the impact of gamification based on the code smells and bugs identified in a gamified and non gamified environment as per code inspection report further measurement and comparison of the quantity and usefulness of code review comments was done using machine learning techniques architectural framework classification code reviews evaluation gamification text analysis,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
5,0,11,143,"Problem-Based Learning to Align Theory and Practice in Software Testing Teaching Traditional approaches to teach software testing lack to align theory with practice in higher education. Problem Based Learning (PBL) is an alternative that allows learning through individual practical experiences. The objective of this paper is to report experiences to teach software testing by using PBL in Software Engineering undergraduate course of Federal University of Pampa. The report covers two editions of Problem Solving course that involved 51 students and focused on students creating and running test cases across software components developed by professors. Data collection had been made by questionnaires with open and closed questions, and data was examined by statistics and Content Analysis technique. As results, we notice evidences of knowledge and perceptions maturing by students about software testing and software quality. We also verify it's possible to mix PBL with other teaching methodologies such as gamification and to amplify their benefits. Gamification, Problem Based Learning, Problem Solving, Software Testing",problem based learning to align theory and practice in software testing teaching traditional approaches to teach software testing lack to align theory with practice in higher education problem based learning pbl is an alternative that allows learning through individual practical experiences the objective of this paper is to report experiences to teach software testing by using pbl in software engineering undergraduate course of federal university of pampa the report covers two editions of problem solving course that involved 51 students and focused on students creating and running test cases across software components developed by professors data collection had been made by questionnaires with open and closed questions and data was examined by statistics and content analysis technique as results we notice evidences of knowledge and perceptions maturing by students about software testing and software quality we also verify it s possible to mix pbl with other teaching methodologies such as gamification and to amplify their benefits gamification problem based learning problem solving software testing,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
6,0,11,132,"Supporting Agile Teams with a Test Analytics Platform: A Case Study Continuous improvement, feedback mechanisms and automated testing are cornerstones of agile methods. We introduce the concept of test analytics, which brings these three practices together. We illustrate the concept with an industrial case study and describe the experiments run by a team who had set a goal for itself to get better at testing. Beyond technical aspects, we explain how these experiments have changed the mindset and the behaviour of the team members. We then present an open source test analytics platform, later developed to share the positive learnings with the community. We describe the platform features and architecture and explain how it can be easily put to use. Before the conclusions, we explain how test analytics fits in the broader context of software analytics and present our ideas for future work. agile development, automated testing, feedback channels, gamification",supporting agile teams with a test analytics platform a case study continuous improvement feedback mechanisms and automated testing are cornerstones of agile methods we introduce the concept of test analytics which brings these three practices together we illustrate the concept with an industrial case study and describe the experiments run by a team who had set a goal for itself to get better at testing beyond technical aspects we explain how these experiments have changed the mindset and the behaviour of the team members we then present an open source test analytics platform later developed to share the positive learnings with the community we describe the platform features and architecture and explain how it can be easily put to use before the conclusions we explain how test analytics fits in the broader context of software analytics and present our ideas for future work agile development automated testing feedback channels gamification,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
7,0,10,221,"Tailoring Gamification to Requirements Elicitation: A Stakeholder Centric Motivation Concept Involving stakeholders in requirements elicitation is a cornerstone of successful requirements engineering (RE). With the recent technological advances, the number of stakeholders of a system has significantly increased. Major stakeholders, end-users in particular, are increasingly difficult to reach, because they may be globally distributed and outside organizational reach, i.e., they are no members of the organizations that are involved in the development of a system. Online elicitation platforms allow to elicit requirements collaboratively from a large number of distributed stakeholders. However, such platforms are not sufficient for motivating stakeholders outside organizational reach to contribute voluntarily. Gamification is a potential means for creating and sustaining such motivation. However, there is little research on stakeholder engagement with gamification so far. Current approaches particularly do not consider that stakeholders learn during elicitation and that their motivational factors also change. In this paper, we address this gap with a motivation concept that is inspired by the theories of experiential learning and need satisfaction. Our contribution is threefold. First, we suggest how to characterize these stakeholders despite not knowing who they are. Second, we show the role of experiential learning and need satisfaction with respect to gamification in the context of requirements elicitation. Third, we present a three-dimensional concept of how to motivate these stakeholders towards requirements elicitation over the whole period of requirements elicitation. experiential learning, gamification, player types, requirements elicitation, self-determination, skill acquisition",tailoring gamification to requirements elicitation a stakeholder centric motivation concept involving stakeholders in requirements elicitation is a cornerstone of successful requirements engineering re with the recent technological advances the number of stakeholders of a system has significantly increased major stakeholders end users in particular are increasingly difficult to reach because they may be globally distributed and outside organizational reach i e they are no members of the organizations that are involved in the development of a system online elicitation platforms allow to elicit requirements collaboratively from a large number of distributed stakeholders however such platforms are not sufficient for motivating stakeholders outside organizational reach to contribute voluntarily gamification is a potential means for creating and sustaining such motivation however there is little research on stakeholder engagement with gamification so far current approaches particularly do not consider that stakeholders learn during elicitation and that their motivational factors also change in this paper we address this gap with a motivation concept that is inspired by the theories of experiential learning and need satisfaction our contribution is threefold first we suggest how to characterize these stakeholders despite not knowing who they are second we show the role of experiential learning and need satisfaction with respect to gamification in the context of requirements elicitation third we present a three dimensional concept of how to motivate these stakeholders towards requirements elicitation over the whole period of requirements elicitation experiential learning gamification player types requirements elicitation self determination skill acquisition,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
8,0,20,114,"Use of Gamification to Teach Agile Values and Collaboration: A Multi-week Scrum Simulation Project in an Undergraduate Software Engineering Course Collaboration and communication are key to successful agile software development. Respect, openness, transparency and trust are core Agile values. However studies show, that there is a shortage of software developers with these skills. How can we teach these skills to software engineering students' This paper presents the approach of using a multi-week Scrum Paper City simulation game. The course execution was accompanied by a thorough evaluation to find out how effective this approach is compared to traditional ex-cathedra teaching. While the evaluation shows some aspects to be improved, it clearly shows that students like to experience the Agile approach directly in a project, that they enjoy more fun, and the collaboration in the team. agile, collaboration, education, gamification, software development, undergraduate, values",use of gamification to teach agile values and collaboration a multi week scrum simulation project in an undergraduate software engineering course collaboration and communication are key to successful agile software development respect openness transparency and trust are core agile values however studies show that there is a shortage of software developers with these skills how can we teach these skills to software engineering students this paper presents the approach of using a multi week scrum paper city simulation game the course execution was accompanied by a thorough evaluation to find out how effective this approach is compared to traditional ex cathedra teaching while the evaluation shows some aspects to be improved it clearly shows that students like to experience the agile approach directly in a project that they enjoy more fun and the collaboration in the team agile collaboration education gamification software development undergraduate values,1,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
9,0,12,182,"Using Gamification to Orient and Motivate Students to Contribute to OSS Projects Students can benefit from contributing to Open Source Software (OSS), since they can enrich their portfolio and learn with real world projects. However, sometimes students are demotivated to contribute due to entrance barriers. On the other hand, gamification is widely used to engage and motivate people to accomplish tasks and improve their performance. The goal of this work is to analyze the use of gamification to orient and motivate undergraduate students to overcome onboarding barriers and engage to OSS projects. To achieve this goal, we implemented four gaming elements (Quests, Points, Ranking, and Levels) in GitLab and assessed the environment by means of a study conducted with 17 students, within a real OSS project (JabRef). At the end of the study, the students evaluated their experience through a questionnaire. We found that the Quest element helped to guide participants and keep them motivated and points helped by providing feedback on students' performed tasks. We conclude that the gamified environment oriented the students in an attempt to make a contribution and that gamification can motivate and orient newcomers' to engage to OSS projects. engagement, gamification, motivation, newcomers, open source software, students",using gamification to orient and motivate students to contribute to oss projects students can benefit from contributing to open source software oss since they can enrich their portfolio and learn with real world projects however sometimes students are demotivated to contribute due to entrance barriers on the other hand gamification is widely used to engage and motivate people to accomplish tasks and improve their performance the goal of this work is to analyze the use of gamification to orient and motivate undergraduate students to overcome onboarding barriers and engage to oss projects to achieve this goal we implemented four gaming elements quests points ranking and levels in gitlab and assessed the environment by means of a study conducted with 17 students within a real oss project jabref at the end of the study the students evaluated their experience through a questionnaire we found that the quest element helped to guide participants and keep them motivated and points helped by providing feedback on students performed tasks we conclude that the gamified environment oriented the students in an attempt to make a contribution and that gamification can motivate and orient newcomers to engage to oss projects engagement gamification motivation newcomers open source software students,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
10,0,9,163,"Code Hunt As Platform for Gamification of Cybersecurity Training The nation needs more cybersecurity professionals. Beyond just a general shortage, women, African Americans, and Latino Americans are underrepresented in the field. This not only contributes to the scarcity of qualified cybersecurity professionals, but the absence of diversity leads to a lack of perspective and differing viewpoints. Part of the problem is that cybersecurity suffers from barriers to entry that include expensive training, exclusionary culture, and the need for costly infrastructure. In order for students to start learning about cybersecurity, access to training, infrastructure and subject matter experts is imperative. The existing Code Hunt framework, used to help students master programming, could be a springboard to help reduce the challenges facing students interested in cybersecurity. Code Hunt offers gamification, community supported development, and a cloud infrastructure that provides an on-ramp to immediate learning. Leveraging Code Hunt's structured gaming model can addresses these weaknesses and makes cybersecurity training more accessible to those without the means or inclination to participate in more traditional cybersecurity competitions. Cybersecurity, Education, Gamification, Software Testing",code hunt as platform for gamification of cybersecurity training the nation needs more cybersecurity professionals beyond just a general shortage women african americans and latino americans are underrepresented in the field this not only contributes to the scarcity of qualified cybersecurity professionals but the absence of diversity leads to a lack of perspective and differing viewpoints part of the problem is that cybersecurity suffers from barriers to entry that include expensive training exclusionary culture and the need for costly infrastructure in order for students to start learning about cybersecurity access to training infrastructure and subject matter experts is imperative the existing code hunt framework used to help students master programming could be a springboard to help reduce the challenges facing students interested in cybersecurity code hunt offers gamification community supported development and a cloud infrastructure that provides an on ramp to immediate learning leveraging code hunt s structured gaming model can addresses these weaknesses and makes cybersecurity training more accessible to those without the means or inclination to participate in more traditional cybersecurity competitions cybersecurity education gamification software testing,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,1.0,0.0
11,0,13,241,"Gamifying Software Security Education and Training via Secure Coding Duels in Code Hunt Sophistication and flexibility of software development make it easy to leave security vulnerabilities in software applications for attackers. It is critical to educate and train software engineers to avoid introducing vulnerabilities in software applications in the first place such as adopting secure coding mechanisms and conducting security testing. A number of websites provide training grounds to train people's hacking skills, which are highly related to security testing skills, and train people's secure coding skills. However, there exists no interactive gaming platform for instilling gaming aspects into the education and training of secure coding. To address this issue, we propose to construct secure coding duels in Code Hunt, a high-impact serious gaming platform released by Microsoft Research. In Code Hunt, a coding duel consists of two code segments: a secret code segment and a player-visible code segment. To solve a coding duel, a player iteratively modifies the player-visible code segment to match the functional behaviors of the secret code segment. During the duel-solving process, the player is given clues as a set of automatically generated test cases to characterize sample functional behaviors of the secret code segment. The game aspect in Code Hunt is to recognize a pattern from the test cases, and to re-engineer the player-visible code segment to exhibit the expected behaviors. Secure coding duels proposed in this work are coding duels that are carefully designed to train players' secure coding skills, such as sufficient input validation and access control. []",gamifying software security education and training via secure coding duels in code hunt sophistication and flexibility of software development make it easy to leave security vulnerabilities in software applications for attackers it is critical to educate and train software engineers to avoid introducing vulnerabilities in software applications in the first place such as adopting secure coding mechanisms and conducting security testing a number of websites provide training grounds to train people s hacking skills which are highly related to security testing skills and train people s secure coding skills however there exists no interactive gaming platform for instilling gaming aspects into the education and training of secure coding to address this issue we propose to construct secure coding duels in code hunt a high impact serious gaming platform released by microsoft research in code hunt a coding duel consists of two code segments a secret code segment and a player visible code segment to solve a coding duel a player iteratively modifies the player visible code segment to match the functional behaviors of the secret code segment during the duel solving process the player is given clues as a set of automatically generated test cases to characterize sample functional behaviors of the secret code segment the game aspect in code hunt is to recognize a pattern from the test cases and to re engineer the player visible code segment to exhibit the expected behaviors secure coding duels proposed in this work are coding duels that are carefully designed to train players secure coding skills such as sufficient input validation and access control,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,1.0,0.0
12,0,11,181,"Code Hunt: Gamifying Teaching and Learning of Computer Science at Scale Code Hunt (http://www.codehunt.com/) is an educational coding game (that runs in a browser) for teaching and learning computer science at scale. The game consists of a series of worlds and levels, which get increasingly challenging. In each level, the player has to discover a secret code fragment and write code for it. The game has sounds and a leaderboard to keep the player engaged. Code Hunt targets teachers and students from introductory to advanced programming or software engineering courses. In addition, Code Hunt can be used by seasoned developers to hone their programming skills or by companies to evaluate job candidates. At the core of the game experience is an automated program analysis and grading engine based on dynamic symbolic execution. The engine detects any behavioral differences between the player's code and the secret code fragment. The game works in any modern browser, and currently supports C# or Java programs. Code Hunt is a dramatic evolution of our earlier Pex4Fun web platform, from which we have gathered considerable experience (including over 1.4 million programs submitted by users). serious gaming",code hunt gamifying teaching and learning of computer science at scale code hunt http www codehunt com is an educational coding game that runs in a browser for teaching and learning computer science at scale the game consists of a series of worlds and levels which get increasingly challenging in each level the player has to discover a secret code fragment and write code for it the game has sounds and a leaderboard to keep the player engaged code hunt targets teachers and students from introductory to advanced programming or software engineering courses in addition code hunt can be used by seasoned developers to hone their programming skills or by companies to evaluate job candidates at the core of the game experience is an automated program analysis and grading engine based on dynamic symbolic execution the engine detects any behavioral differences between the player s code and the secret code fragment the game works in any modern browser and currently supports c or java programs code hunt is a dramatic evolution of our earlier pex4fun web platform from which we have gathered considerable experience including over 1 4 million programs submitted by users serious gaming,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
13,0,13,147,"Context-aware Assistive Systems at the Workplace: Analyzing the Effects of Projection and Gamification Context-aware assistive systems (CAAS) have become ubiquitous in cars or smartphones but not in industrial work contexts: while there are systems controlling work results, context-specific assistance during the processes is hardly offered. As a result production workers still have to rely on their skills and expertise. While un-impaired workers may cope well with this situation, elderly or impaired persons in production environments need context-sensitive assistance. The contribution of the research presented here is three-fold: (1) We provide a framework for context-aware assistive systems in production environments. These systems are based on motion recognition and use projection and elements from game design (gamification) to augment work. (2) Based on this framework we describe a prototype with respect to both the physical and the software implementation. (3) We present the results of a study with impaired workers and quantifying the effects of the augmentations on work speed and quality. assistive technology, augmented reality, computer-assisted instruction, gamification, human machine interaction",context aware assistive systems at the workplace analyzing the effects of projection and gamification context aware assistive systems caas have become ubiquitous in cars or smartphones but not in industrial work contexts while there are systems controlling work results context specific assistance during the processes is hardly offered as a result production workers still have to rely on their skills and expertise while un impaired workers may cope well with this situation elderly or impaired persons in production environments need context sensitive assistance the contribution of the research presented here is three fold 1 we provide a framework for context aware assistive systems in production environments these systems are based on motion recognition and use projection and elements from game design gamification to augment work 2 based on this framework we describe a prototype with respect to both the physical and the software implementation 3 we present the results of a study with impaired workers and quantifying the effects of the augmentations on work speed and quality assistive technology augmented reality computer assisted instruction gamification human machine interaction,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
14,0,13,82,"Creating Software Engineering Student Interaction Profiles for Discovering Gamification Approaches to Improve Collaboration Benefits of collaborative learning are established and gamification methods have been used to motivate students towards achieving course goals in educational settings. However, different users prefer different game elements and rewarding approaches. We present an evidence-based method and a case study where interaction analysis and k-means clustering is used to create gamification preference profiles. These profiles can be used with an agent-based simulation to evaluate how computer supported collaboration system users react to the gamification elements and how the collaboration dynamics change. collaborative learning, gamification, interaction analysis, k-means clustering, profiling",creating software engineering student interaction profiles for discovering gamification approaches to improve collaboration benefits of collaborative learning are established and gamification methods have been used to motivate students towards achieving course goals in educational settings however different users prefer different game elements and rewarding approaches we present an evidence based method and a case study where interaction analysis and k means clustering is used to create gamification preference profiles these profiles can be used with an agent based simulation to evaluate how computer supported collaboration system users react to the gamification elements and how the collaboration dynamics change collaborative learning gamification interaction analysis k means clustering profiling,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
15,0,14,126,"Mutual Assessment in the Social Programmer Ecosystem: An Empirical Investigation of Developer Profile Aggregators The multitude of social media channels that programmers can use to participate in software development has given rise to online developer profiles that aggregate activity across many services. Studying members of such developer profile aggregators, we found an ecosystem that revolves around the social programmer. Developers are assessing each other to evaluate whether other developers are interesting, worth following, or worth collaborating with. They are self-conscious about being assessed, and thus manage their public images. They value passion for software development, new technologies, and learning. Some recruiters participate in the ecosystem and use it to find candidates for hiring; other recruiters struggle with the interpretation of signals and issues of trust. This mutual assessment is changing how software engineers collaborate and how they advance their skills. gamification, motivation, reputation, social code sharing, social media, software development, software engineering, virtual communities",mutual assessment in the social programmer ecosystem an empirical investigation of developer profile aggregators the multitude of social media channels that programmers can use to participate in software development has given rise to online developer profiles that aggregate activity across many services studying members of such developer profile aggregators we found an ecosystem that revolves around the social programmer developers are assessing each other to evaluate whether other developers are interesting worth following or worth collaborating with they are self conscious about being assessed and thus manage their public images they value passion for software development new technologies and learning some recruiters participate in the ecosystem and use it to find candidates for hiring other recruiters struggle with the interpretation of signals and issues of trust this mutual assessment is changing how software engineers collaborate and how they advance their skills gamification motivation reputation social code sharing social media software development software engineering virtual communities,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,1.0,0.0,0.0,0.0
16,0,7,64,"Research on teaching gamification of software engineering Online Games are bringing obvious impact on college teaching. On the other hand,games and professional teaching can be organically combined in the college training of Software engineering. In this article, the gamification of personnel training objectives, course-teaching and platform of software engineering is described. It is explored the practical path to achieve the training objectives of software engineering for non-governmental universities of China. computer aided instruction, computer games, computer science education, educational courses, educational institutions, software engineering, teaching, teaching gamification, software engineering, online games, college teaching, professional teaching, college training, personnel training objective, course-teaching, nongovernmental university, Educational institutions, Games, Psychology, Computers, Software, Databases, Three-dimensional displays, Teaching gamification, software engineering",research on teaching gamification of software engineering online games are bringing obvious impact on college teaching on the other hand games and professional teaching can be organically combined in the college training of software engineering in this article the gamification of personnel training objectives course teaching and platform of software engineering is described it is explored the practical path to achieve the training objectives of software engineering for non governmental universities of china computer aided instruction computer games computer science education educational courses educational institutions software engineering teaching teaching gamification software engineering online games college teaching professional teaching college training personnel training objective course teaching nongovernmental university educational institutions games psychology computers software databases three dimensional displays teaching gamification software engineering,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
17,0,17,227,"Designing serious games for learning support in medicine studies: A specific method to elicit and formalize requirements In Spain, the new Medicine degrees of the European Higher Education Area (EHEA) have incorporated Information Technologies (IT) subjects to develop horizontal competences in their curriculum. Medicine Studies are costly for Higher Education (HE) institutions and, then, every cost-effective educational innovation is welcomed. There are different general approaches for designing and developing serious games in general, but specific target disciplines as Medicine (educational and professional training), lack of tailor-made methodologies, even in eliciting requirements under the Requirements Engineering (RE) framework, as a subfield of Software Engineering. In medical higher education, the main objective of using games is to engage learners in complex problem spaces that replicate real world situations, as it happens in hospital emergencies, surgery operations and so on, without the constraints and risks of the day to day practice (patient injuries, health complications and death). Therefore, the development of serious HE games is a complex, time consuming and costly process, especially for learning medical skills. In this Work in Progress, we address the problem of lacking suitable methodologies in the design and development processes of educational serious games for HE medical environments. Our proposal is a semi-formal and simple method to elicit and formalize the specific teaching needs identified in subjects or practices of Medicine degrees, in order to design and develop serious games based on sound educational principles and theories and on RE rules. biomedical education, computer based training, educational institutions, further education, medical computing, serious games (computing), software engineering, learning support, medicine studies, European higher education area, EHEA, information technologies, horizontal competences, higher education institutions, educational training, professional training, requirements engineering framework, RE framework, software engineering, medical higher education, hospital emergencies, surgery operations, serious HE games, medical skill learning, educational serious games, HE medical environments, Games, Education, Computational modeling, Software engineering, Proposals, Media, Computer languages, serious games as educational tools, edutainment, gamification, learning needs in medicine studies, requirements analysis methods, software technical requirements, video games design and software development methodologies",designing serious games for learning support in medicine studies a specific method to elicit and formalize requirements in spain the new medicine degrees of the european higher education area ehea have incorporated information technologies it subjects to develop horizontal competences in their curriculum medicine studies are costly for higher education he institutions and then every cost effective educational innovation is welcomed there are different general approaches for designing and developing serious games in general but specific target disciplines as medicine educational and professional training lack of tailor made methodologies even in eliciting requirements under the requirements engineering re framework as a subfield of software engineering in medical higher education the main objective of using games is to engage learners in complex problem spaces that replicate real world situations as it happens in hospital emergencies surgery operations and so on without the constraints and risks of the day to day practice patient injuries health complications and death therefore the development of serious he games is a complex time consuming and costly process especially for learning medical skills in this work in progress we address the problem of lacking suitable methodologies in the design and development processes of educational serious games for he medical environments our proposal is a semi formal and simple method to elicit and formalize the specific teaching needs identified in subjects or practices of medicine degrees in order to design and develop serious games based on sound educational principles and theories and on re rules biomedical education computer based training educational institutions further education medical computing serious games computing software engineering learning support medicine studies european higher education area ehea information technologies horizontal competences higher education institutions educational training professional training requirements engineering framework re framework software engineering medical higher education hospital emergencies surgery operations serious he games medical skill learning educational serious games he medical environments games education computational modeling software engineering proposals media computer languages serious games as educational tools edutainment gamification learning needs in medicine studies requirements analysis methods software technical requirements video games design and software development methodologies,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
18,0,17,134,"Design of a pedagogic instrument for teaching software process improvement: Teaching instrument for university and business environments Software development organizations focus their efforts and invest resources on improving their processes and motivating their teams. The goal of this initiative is to develop high quality software products; however, some difficulties related to the learning process can be found in the dynamics interactions of the professional teams within the organization. A potential cause for these difficulties can be attributed to the use and implementation of teaching methodologies with lower levels of team member motivation. Gamification offers a possible solution for these deficiencies providing more thought-provoking environments for the learning experience. In this paper we propose a teaching instrument based on the principles of gamification to achieve a required level of motivation in teams involved in process improvement. Thus, motivation makes possible a successful implementation of the continuous improvement cycle in software development organizations. computer science education, software process improvement, teaching, pedagogic instrument, software process improvement teaching, teaching instrument, business environments, university environments, gamification principles, continuous improvement cycle, software development organizations, Instruments, Software, Silicon compounds, Education, Media, Organizations, Palabras Clave, Mejora de procesos software, Gamificación, Inyección y eliminación de defectos, PSP TSP",design of a pedagogic instrument for teaching software process improvement teaching instrument for university and business environments software development organizations focus their efforts and invest resources on improving their processes and motivating their teams the goal of this initiative is to develop high quality software products however some difficulties related to the learning process can be found in the dynamics interactions of the professional teams within the organization a potential cause for these difficulties can be attributed to the use and implementation of teaching methodologies with lower levels of team member motivation gamification offers a possible solution for these deficiencies providing more thought provoking environments for the learning experience in this paper we propose a teaching instrument based on the principles of gamification to achieve a required level of motivation in teams involved in process improvement thus motivation makes possible a successful implementation of the continuous improvement cycle in software development organizations computer science education software process improvement teaching pedagogic instrument software process improvement teaching teaching instrument business environments university environments gamification principles continuous improvement cycle software development organizations instruments software silicon compounds education media organizations palabras clave mejora de procesos software gamificaci n inyecci n y eliminaci n de defectos psp tsp,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
19,0,6,177,"Introducing gamification into e-learning university courses Research on educational e-courses that contain only a series of motivating elements of computer games but do not include playing computer games has intensified since 2010 [1] [6]. This field of research is called gamification and represents the use of game elements (mechanics, dynamics and aesthetics) in a field (education, marketing etc.) that is not a computer game. A review of literature related to the field of teaching with online courses in information technology (e.g. programming, software engineering) shows that the topic of gamification has so far been inadequately explored, with the lack of theoretical and empirical research that would involve gamification methodology. Previous studies have shown that gamification can have a positive impact on the pedagogical and psychological aspects of e-learning. In this paper empirical research is presented regarding the use of gamification in online teaching of programming. A gamified e-course was designed for the lectures in programming, and a possible positive effect was examined on the usage of learning materials in an experimental group of students who will use a gamified e-course (online system). computer aided instruction, computer games, computer science education, educational courses, programming, teaching, student experimental group, learning materials, gamified e-course, online programming teaching, psychological aspects, pedagogical aspects, information technology, online course teaching, game elements, computer games, educational e-courses, e-learning university courses, gamification, Games, Computers, Electronic learning, Programming profession, Learning systems",introducing gamification into e learning university courses research on educational e courses that contain only a series of motivating elements of computer games but do not include playing computer games has intensified since 2010 1 6 this field of research is called gamification and represents the use of game elements mechanics dynamics and aesthetics in a field education marketing etc that is not a computer game a review of literature related to the field of teaching with online courses in information technology e g programming software engineering shows that the topic of gamification has so far been inadequately explored with the lack of theoretical and empirical research that would involve gamification methodology previous studies have shown that gamification can have a positive impact on the pedagogical and psychological aspects of e learning in this paper empirical research is presented regarding the use of gamification in online teaching of programming a gamified e course was designed for the lectures in programming and a possible positive effect was examined on the usage of learning materials in an experimental group of students who will use a gamified e course online system computer aided instruction computer games computer science education educational courses programming teaching student experimental group learning materials gamified e course online programming teaching psychological aspects pedagogical aspects information technology online course teaching game elements computer games educational e courses e learning university courses gamification games computers electronic learning programming profession learning systems,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
20,0,7,125,"Crowdsourcing Code and Process via Code Hunt Crowd sourcing programming relies on active participation. One way to get such participation is through an engaging game. Code Hunt (https://www.codehunt.com/) from Microsoft Research is a web-based serious gaming platform with the potential to be leveraged as a crowd sourcing system. In Code Hunt, players create programs by re-engineering against a changing set of test cases. The game has been played by over 100,000 players in world-wide contests, and to practice coding skills. The vast collected data of code modified by players and the process taken to succeed could be used by others for software construction, teaching, or learning. In this position paper, we discuss these existing crowd sourcing activities in Code Hunt and a future game type for crowd sourcing. software engineering, crowdsourcing code, code hunt process, crowd sourcing programming, microsoft research, gaming platform, crowd sourcing system, coding skills, software construction, software teaching, software learning, software engineering, Crowdsourcing, Games, Encoding, Software engineering, Measurement, Programming, User interfaces, crowdsourcing, programming contests, educational gamification, educational software engineering",crowdsourcing code and process via code hunt crowd sourcing programming relies on active participation one way to get such participation is through an engaging game code hunt https www codehunt com from microsoft research is a web based serious gaming platform with the potential to be leveraged as a crowd sourcing system in code hunt players create programs by re engineering against a changing set of test cases the game has been played by over 100 000 players in world wide contests and to practice coding skills the vast collected data of code modified by players and the process taken to succeed could be used by others for software construction teaching or learning in this position paper we discuss these existing crowd sourcing activities in code hunt and a future game type for crowd sourcing software engineering crowdsourcing code code hunt process crowd sourcing programming microsoft research gaming platform crowd sourcing system coding skills software construction software teaching software learning software engineering crowdsourcing games encoding software engineering measurement programming user interfaces crowdsourcing programming contests educational gamification educational software engineering,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,1.0,0.0
21,0,8,109,"Application of gamification elements in software engineering teamwork Nowadays, gamification elements have been applied beyond of traditional games that we know, an example is their application in academic area in software engineering, where them have been supported the students' learning and the accomplishment of activities in projects. In this context, gamification elements have been applied in very few investigation studies to improve the integration of team work members. Thus, is important to identify which is the impact of the gamification elements in teamwork. This study presents a comparison between applications of gamification elements in context of education, business, and development; with the aim to identify factors to keep in mind at the moment of apply gamification elements. computer aided instruction, computer science education, serious games (computing), software engineering, gamification elements, software engineering teamwork, student learning, student activity accomplishment, team work members, Software, Software engineering, Teamwork, Silicon compounds, Games, Education, Business, gamification, gamification elements, work teams, teamwork, software engineering",application of gamification elements in software engineering teamwork nowadays gamification elements have been applied beyond of traditional games that we know an example is their application in academic area in software engineering where them have been supported the students learning and the accomplishment of activities in projects in this context gamification elements have been applied in very few investigation studies to improve the integration of team work members thus is important to identify which is the impact of the gamification elements in teamwork this study presents a comparison between applications of gamification elements in context of education business and development with the aim to identify factors to keep in mind at the moment of apply gamification elements computer aided instruction computer science education serious games computing software engineering gamification elements software engineering teamwork student learning student activity accomplishment team work members software software engineering teamwork silicon compounds games education business gamification gamification elements work teams teamwork software engineering,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
22,0,8,153,"Method of pedagogic instruments design for software engineering Software quality is a critical aspect in the development process of products for several economic sectors (ie. industry, services, agricultural, etc.). CMMI, ISO standards, Personal Software Process (PSP), and Team Software Process (TSP) are examples of approaches for improving software quality. Teaching such approaches is a challenge because of the amount of concepts, practices, and statistics required for their adoption, generating problems related with low motivation and poor performance in students or professionals in training. In the literature several approaches for solving these problems are presented, some of them incorporating active learning strategies like case method, simulation, and gamification. In this paper we propose a method for facilitating the design of teaching strategies based on gamification principles, looking for increasing the student motivation in their learning process. As a way to evaluate the proposed method, a pilot study case for teaching subjects related to software design in the context of PSP is presented. computer science education, human factors, software quality, teaching, pedagogic instrument design, software quality, motivation, active learning strategies, teaching strategies, gamification principles, software design, PSP, software engineering education, Instruments, Education, Software engineering, Software quality, Software design, ISO, software engineering education, gamification, PSP",method of pedagogic instruments design for software engineering software quality is a critical aspect in the development process of products for several economic sectors ie industry services agricultural etc cmmi iso standards personal software process psp and team software process tsp are examples of approaches for improving software quality teaching such approaches is a challenge because of the amount of concepts practices and statistics required for their adoption generating problems related with low motivation and poor performance in students or professionals in training in the literature several approaches for solving these problems are presented some of them incorporating active learning strategies like case method simulation and gamification in this paper we propose a method for facilitating the design of teaching strategies based on gamification principles looking for increasing the student motivation in their learning process as a way to evaluate the proposed method a pilot study case for teaching subjects related to software design in the context of psp is presented computer science education human factors software quality teaching pedagogic instrument design software quality motivation active learning strategies teaching strategies gamification principles software design psp software engineering education instruments education software engineering software quality software design iso software engineering education gamification psp,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
23,0,14,173,"Towards the Effective Software Development of an eLearning Platform Featuring Learning Analytics and Gamification This paper presents a first step into the construction of an innovative web-based eLearning platform featuring Learning Analytics and Gamification called ICTFLAG. The main goal and key decision at this initial stage of the platform development is the search and selection processes of the most suitable software development framework to guide and support the effective construction of the platform. Despite the availability of many architecture and application frameworks forcreating web-based systems in the market, only a few are potentially suitable for the specific goals of our eLearning platform. In this paper, we first review existing frameworks in terms of pros and cons considering the characteristics of the project. Then, the search's outcomes go into a selection methodology whose results are presented and discussed, leading us to make a final decision on the software framework that will eventually support an effective development of the ICT-FLAG platform. The research reported in this paper is currently undertaken within the project ""Enhancing ICT education through Formative assessment, Learning Analytics and Gamification"" (ICT-FLAG) funded by the Spanish Government. computer aided instruction, computer games, Internet, software engineering, learning analytics, gamification, innovative Web-based eLearning platform, software development framework, Web-based systems, ICT-FLAG platform, ICT education, formative assessment, Java, Prototypes, Software, Electronic learning, Containers, Servers, eLearning platform, software development framework, web technologies, JavaEE, Spring, OSGi",towards the effective software development of an elearning platform featuring learning analytics and gamification this paper presents a first step into the construction of an innovative web based elearning platform featuring learning analytics and gamification called ictflag the main goal and key decision at this initial stage of the platform development is the search and selection processes of the most suitable software development framework to guide and support the effective construction of the platform despite the availability of many architecture and application frameworks forcreating web based systems in the market only a few are potentially suitable for the specific goals of our elearning platform in this paper we first review existing frameworks in terms of pros and cons considering the characteristics of the project then the search s outcomes go into a selection methodology whose results are presented and discussed leading us to make a final decision on the software framework that will eventually support an effective development of the ict flag platform the research reported in this paper is currently undertaken within the project enhancing ict education through formative assessment learning analytics and gamification ict flag funded by the spanish government computer aided instruction computer games internet software engineering learning analytics gamification innovative web based elearning platform software development framework web based systems ict flag platform ict education formative assessment java prototypes software electronic learning containers servers elearning platform software development framework web technologies javaee spring osgi,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
24,0,5,267,"Gamification towards sustainable mobile application Gamification is not a newly emerging concept. Perhaps, it is a new term to some people. Gamification is a powerful new strategy to influence and motivate groups of people. It applies game mechanics to non-game activities to change the user's behavior of an application. It improves the engagement of user by keeping score of points earned through various activities on the application. The recent gamified websites or a related service such as Foursquare is a location-based application that pinpoints where you are and your activities. Users of the Foursquare can ``check in'' to various locations on their mobile phones and gain incentives like badges or deals. Gamification is utilised as a mean to build up user loyalty, and not so much to gain their long-term engagement. This article discusses how the gamification can help to drive the sustainability after a mobile application has been delivered and is in use. It is important to make mobile application continuously visible and sustainable if the concept of gamification has been used correctly. The more users can gain from the virtual and tangible rewards of using our application, the more we can be rewarded from our users. It also discusses how adding a ``game layer'' has improved the basic functions in society like educating people to become more responsible and helpful and use badges as virtual reward to users who contribute photos. Interactive mobile application designed to change the way of people report road accident cases with applying a simplicity and convenience principles. For instance, user just needs to snap photo and touch on screen to report a road accident case. computer games, interactive systems, mobile computing, Web sites, gamification, sustainable mobile application, game mechanics, nongame activity, user behavior, gamified Web sites, Foursquare, location-based application, mobile phones, user loyalty, long-term engagement, sustainability, virtual rewards, tangible rewards, interactive mobile application, Mobile communication, Games, Road accidents, Communities, Mobile handsets, Educational institutions, game, interactive mobile application, point-based location technique",gamification towards sustainable mobile application gamification is not a newly emerging concept perhaps it is a new term to some people gamification is a powerful new strategy to influence and motivate groups of people it applies game mechanics to non game activities to change the user s behavior of an application it improves the engagement of user by keeping score of points earned through various activities on the application the recent gamified websites or a related service such as foursquare is a location based application that pinpoints where you are and your activities users of the foursquare can check in to various locations on their mobile phones and gain incentives like badges or deals gamification is utilised as a mean to build up user loyalty and not so much to gain their long term engagement this article discusses how the gamification can help to drive the sustainability after a mobile application has been delivered and is in use it is important to make mobile application continuously visible and sustainable if the concept of gamification has been used correctly the more users can gain from the virtual and tangible rewards of using our application the more we can be rewarded from our users it also discusses how adding a game layer has improved the basic functions in society like educating people to become more responsible and helpful and use badges as virtual reward to users who contribute photos interactive mobile application designed to change the way of people report road accident cases with applying a simplicity and convenience principles for instance user just needs to snap photo and touch on screen to report a road accident case computer games interactive systems mobile computing web sites gamification sustainable mobile application game mechanics nongame activity user behavior gamified web sites foursquare location based application mobile phones user loyalty long term engagement sustainability virtual rewards tangible rewards interactive mobile application mobile communication games road accidents communities mobile handsets educational institutions game interactive mobile application point based location technique,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0,0.0,0.0,0.0,0.0,0.0
25,0,6,242,"Code Defenders: A Mutation Testing Game Mutation testing is endorsed by software testing researchers for its unique capability of providing pragmatic estimates of a test suite's fault detection capability, and for guiding testers in improving their test suites. In practice, however, wide-spread adoption of mutation testing is hampered because any non-trivial program results in huge numbers of mutants, many of which are either trivial or equivalent, and thus useless. Trivial mutants reduce the motivation of developers in trusting and using the technique, while equivalent mutants are frustratingly difficult to handle. These problems are exacerbated by insufficient education on testing, which often means that mutation testing is not well understood in practice. These are examples of the types of problems that gamification aims to overcome by making such tedious activities competitive and entertaining. In this paper, we introduce the first steps towards building Code Defenders, a mutation testing game where players take the role of an attacker, who aims to create the most subtle non-equivalent mutants, or a defender, who aims to create strong tests to kill these mutants. The benefits of such an approach are manifold: The game can serve an educational role by engaging learners in mutation testing activities in a fun way. Experienced players will produce strong test suites, capable of detecting even the most subtle bugs that other players can conceive. Equivalent mutants are handled by making them a special part of the gameplay, where points are at stake in duels between attackers and defenders. program testing, software quality, code defender, mutation testing game, software testing, fault detection, gamification, Games, Software, Conferences, Software testing, Education, Context, Mutation testing, Gamification, Testing education",code defenders a mutation testing game mutation testing is endorsed by software testing researchers for its unique capability of providing pragmatic estimates of a test suite s fault detection capability and for guiding testers in improving their test suites in practice however wide spread adoption of mutation testing is hampered because any non trivial program results in huge numbers of mutants many of which are either trivial or equivalent and thus useless trivial mutants reduce the motivation of developers in trusting and using the technique while equivalent mutants are frustratingly difficult to handle these problems are exacerbated by insufficient education on testing which often means that mutation testing is not well understood in practice these are examples of the types of problems that gamification aims to overcome by making such tedious activities competitive and entertaining in this paper we introduce the first steps towards building code defenders a mutation testing game where players take the role of an attacker who aims to create the most subtle non equivalent mutants or a defender who aims to create strong tests to kill these mutants the benefits of such an approach are manifold the game can serve an educational role by engaging learners in mutation testing activities in a fun way experienced players will produce strong test suites capable of detecting even the most subtle bugs that other players can conceive equivalent mutants are handled by making them a special part of the gameplay where points are at stake in duels between attackers and defenders program testing software quality code defender mutation testing game software testing fault detection gamification games software conferences software testing education context mutation testing gamification testing education,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
26,0,6,230,"Acceptance Requirements and Their Gamification Solutions We live in the days of social software where social interactions, from simple notifications to complex business processes, are supported by software platforms such as Facebook and Twitter. But for any social software to be successful, it must be used by a sizeable portion of its intended user community. Usage requirements are usually referred to as Acceptance Requirements and they have been studied in the literature both for general technology as well as software. Operationalization techniques for such requirements often consist of making a game out of software usage where users are rewarded/penalized depending onthe degree of their participation. The game may be competitive or non-competitive, depending on the anticipated personality traits of intended users. Making a game out of usage is often referred to as Gamification, and gamification has attracted huge attention in the literature for the past few years because it offers a novelapproach to software technology usage. This paper proposes a generic framework for designing gamified solutions for acceptance requirements. The framework consists of a generic acceptance goal model that characterizes the problem space by capturing possible refinements for acceptance requirements, and a generic gamification model that capturespossible gamified operationalizations of acceptance requirements. These models have been extracted from the literature and they are highly dependent on context (cognitive and social) elements of the intended user community. The proposed framework isillustrated with the Meeting Scheduler exemplar. social networking (online), software engineering, acceptance requirement, gamification solution, social software, social interactions, Facebook, Twitter, user community, operationalization techniques, software usage, generic acceptance goal model, Meeting Scheduler exemplar, Games, Context modeling, Context, Software, Psychology, Training, Analytical models, Acceptance requirements, gamification, context models, goal models, requirements engineering",acceptance requirements and their gamification solutions we live in the days of social software where social interactions from simple notifications to complex business processes are supported by software platforms such as facebook and twitter but for any social software to be successful it must be used by a sizeable portion of its intended user community usage requirements are usually referred to as acceptance requirements and they have been studied in the literature both for general technology as well as software operationalization techniques for such requirements often consist of making a game out of software usage where users are rewarded penalized depending onthe degree of their participation the game may be competitive or non competitive depending on the anticipated personality traits of intended users making a game out of usage is often referred to as gamification and gamification has attracted huge attention in the literature for the past few years because it offers a novelapproach to software technology usage this paper proposes a generic framework for designing gamified solutions for acceptance requirements the framework consists of a generic acceptance goal model that characterizes the problem space by capturing possible refinements for acceptance requirements and a generic gamification model that capturespossible gamified operationalizations of acceptance requirements these models have been extracted from the literature and they are highly dependent on context cognitive and social elements of the intended user community the proposed framework isillustrated with the meeting scheduler exemplar social networking online software engineering acceptance requirement gamification solution social software social interactions facebook twitter user community operationalization techniques software usage generic acceptance goal model meeting scheduler exemplar games context modeling context software psychology training analytical models acceptance requirements gamification context models goal models requirements engineering,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
27,0,16,106,"Poster: Design and development of a virtual reality system for vocational rehabilitation of individuals with disabilities This paper considers the design and development of a virtual reality system that aids in vocational rehabilitation of individuals with disabilities. The system focuses on three types of disabilities: autism spectrum disorder, traumatic brain injury, and severe mobility impairment. The system allows job trainers to rapidly assess the capabilities of individuals with disabilities, detect the most suitable job for them, and train them in a safe and motivating environment where there are no significant consequences of making errors. Design considerations and research questions that arise throughout development are shared to create awareness of the special considerations involved in developing virtual reality systems for individuals with disabilities. computer based training, handicapped aids, human computer interaction, medical disorders, software engineering, virtual reality, vocational training, virtual reality system design, vocational rehabilitation, virtual reality system development, disabled individuals, autism spectrum disorder, traumatic brain injury, severe mobility impairment, job trainers, Training, Virtual environments, Variable speed drives, Employment, Autism, Tracking, Virtual reality simulation, virtual interaction, tangible interaction, navigation through virtual environments, vocational rehabilitation, disabilities, gamification",poster design and development of a virtual reality system for vocational rehabilitation of individuals with disabilities this paper considers the design and development of a virtual reality system that aids in vocational rehabilitation of individuals with disabilities the system focuses on three types of disabilities autism spectrum disorder traumatic brain injury and severe mobility impairment the system allows job trainers to rapidly assess the capabilities of individuals with disabilities detect the most suitable job for them and train them in a safe and motivating environment where there are no significant consequences of making errors design considerations and research questions that arise throughout development are shared to create awareness of the special considerations involved in developing virtual reality systems for individuals with disabilities computer based training handicapped aids human computer interaction medical disorders software engineering virtual reality vocational training virtual reality system design vocational rehabilitation virtual reality system development disabled individuals autism spectrum disorder traumatic brain injury severe mobility impairment job trainers training virtual environments variable speed drives employment autism tracking virtual reality simulation virtual interaction tangible interaction navigation through virtual environments vocational rehabilitation disabilities gamification,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
28,0,2,60,"Crowd development Crowd development is a development process designed for transient workers of varying skill. Work is organized into microtasks, which are short, self-descriptive, and modular. Microtasks recursively spawn microtasks and are matched to workers, who accrue points reflecting value created. Crowd development might help to reduce time to market and software development costs, increase programmer productivity, and make programming more fun. cost reduction, groupware, software engineering, time to market, transient workers, self-descriptive microtasks, modular microtasks, short microtasks, crowd development, time to market reduction, software development cost reduction, programmer productivity, Software, Games, Programming, Software engineering, Transient analysis, Educational institutions, Testing, crowdsourcing, distributed development, gamification, social software development",crowd development crowd development is a development process designed for transient workers of varying skill work is organized into microtasks which are short self descriptive and modular microtasks recursively spawn microtasks and are matched to workers who accrue points reflecting value created crowd development might help to reduce time to market and software development costs increase programmer productivity and make programming more fun cost reduction groupware software engineering time to market transient workers self descriptive microtasks modular microtasks short microtasks crowd development time to market reduction software development cost reduction programmer productivity software games programming software engineering transient analysis educational institutions testing crowdsourcing distributed development gamification social software development,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,1.0,0.0,0.0,0.0
29,0,11,232,"Gamification of Business Processes: Re-designing Work in Production and Service Industry In this work we provide an overview of gamification, i.e. the application of methods from game design to enrich non-gaming processes. The contribution is divided into five subsections: an introduction focusing on the progression of gamification through the hype cycle in the recent years (1), a brief introduction to gamification mechanics (1) and an overview of the state of the art in established areas (3). The focus is a discussion of more recent attempts of gamification in service and production (4). We also discuss the ethical implications (5) and the future perspectives (6) of gamified business processes. Gamification has been successfully applied in the domains education (serious games) and health (exergames) and is spreading to other areas. In recent years there have been various attempts to ``gamify'' business processes. While the first efforts date back as far as the collection of miles in frequent flyer programs, we will portray some of the more recent and comprehensive software-based approaches in the service industry, e.g. the gamification of processes in sales and marketing. We discuss their accomplishments as well as their social and ethical implicatio. Finally a very recent approach is presented: the application of gamification in the domain of industrial production. We discuss the special requirements in this domain and the effects on the business level and on the users. We conclude with a prognosis on the future development of gamification. Gamification, Assistive technology, Computer-assisted instruction, Augmented reality, Human machine interaction",gamification of business processes re designing work in production and service industry in this work we provide an overview of gamification i e the application of methods from game design to enrich non gaming processes the contribution is divided into five subsections an introduction focusing on the progression of gamification through the hype cycle in the recent years 1 a brief introduction to gamification mechanics 1 and an overview of the state of the art in established areas 3 the focus is a discussion of more recent attempts of gamification in service and production 4 we also discuss the ethical implications 5 and the future perspectives 6 of gamified business processes gamification has been successfully applied in the domains education serious games and health exergames and is spreading to other areas in recent years there have been various attempts to gamify business processes while the first efforts date back as far as the collection of miles in frequent flyer programs we will portray some of the more recent and comprehensive software based approaches in the service industry e g the gamification of processes in sales and marketing we discuss their accomplishments as well as their social and ethical implicatio finally a very recent approach is presented the application of gamification in the domain of industrial production we discuss the special requirements in this domain and the effects on the business level and on the users we conclude with a prognosis on the future development of gamification gamification assistive technology computer assisted instruction augmented reality human machine interaction,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,1.0,0.0
30,0,11,180,"Simulation-games for Learning Conducive Workplaces: A Case Study for Manual Assembly All segments of stakeholders in society need to understand economic, environmental and social connections and implications in order to facilitate sustainable development. Currently many people - especially in emerging countries - are not aware of the challenges associated with sustainability. In addition new technology has to be developed to find solutions for providing growth without exceeding the resource boundaries of our planet. This demands a drastically increased learning and teaching productivity and thus new approaches for education. Exemplarily for engineering education, the authors present a concept in which simulation-games are applied in order to support training for assembly processes on manual workplaces. The Assembly Game and the Gaming System are introduced. The first game is played on portable devices. Learners acquire knowledge of the assembly sequence of a bicycle e-motor. The second game is played on a manual assembly workplace. It encourages practice based learning by combining gaming software with a manual assembly workplace. Both games are implemented in education oriented software with strong visual features. Motion capture technology is used in order to support the immediate response to the user's actions. Learnstruments, games, gamification, workplace training, manual assembly",simulation games for learning conducive workplaces a case study for manual assembly all segments of stakeholders in society need to understand economic environmental and social connections and implications in order to facilitate sustainable development currently many people especially in emerging countries are not aware of the challenges associated with sustainability in addition new technology has to be developed to find solutions for providing growth without exceeding the resource boundaries of our planet this demands a drastically increased learning and teaching productivity and thus new approaches for education exemplarily for engineering education the authors present a concept in which simulation games are applied in order to support training for assembly processes on manual workplaces the assembly game and the gaming system are introduced the first game is played on portable devices learners acquire knowledge of the assembly sequence of a bicycle e motor the second game is played on a manual assembly workplace it encourages practice based learning by combining gaming software with a manual assembly workplace both games are implemented in education oriented software with strong visual features motion capture technology is used in order to support the immediate response to the user s actions learnstruments games gamification workplace training manual assembly,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
31,0,10,163,"Gamification and serious game approaches for adult literacy tablet software In this paper, we overview the design of tablet apps we designed and built to teach literacy to adults, and present the results and conclusions derived from experiments performed with target users. Low adult literacy is a significant problem with a high economic cost both for the individuals and for society. Programs created to address low adult literacy face access and engagement barriers that tablet software may be able to help overcome. We designed three tablet apps, using two contrasting approaches of incorporating game-design elements to engage the users. We tested the apps with participants from the Brant Skills Centre, a non-profit organization that offers adult literacy programs in Brantford, Ontario. Though participants were divided on whether they preferred the apps to more traditional instruction, most participants preferred using the apps in addition to more traditional instruction. Based on this we conclude that gamification and serious game design approaches were effective at increasing learner engagement, and we propose a direction for future research. Gamification, Serious game, Tablet user experience, User experience, Literacy, Adult literacy",gamification and serious game approaches for adult literacy tablet software in this paper we overview the design of tablet apps we designed and built to teach literacy to adults and present the results and conclusions derived from experiments performed with target users low adult literacy is a significant problem with a high economic cost both for the individuals and for society programs created to address low adult literacy face access and engagement barriers that tablet software may be able to help overcome we designed three tablet apps using two contrasting approaches of incorporating game design elements to engage the users we tested the apps with participants from the brant skills centre a non profit organization that offers adult literacy programs in brantford ontario though participants were divided on whether they preferred the apps to more traditional instruction most participants preferred using the apps in addition to more traditional instruction based on this we conclude that gamification and serious game design approaches were effective at increasing learner engagement and we propose a direction for future research gamification serious game tablet user experience user experience literacy adult literacy,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
32,0,9,283,"Human Factors Issues in Developing Country Remote K-12 Education Remote sites in South Africa can be characterized by a lack of inter-city transport, lack of societal infrastructure, and minimal computing resources and access to them. As a result, Kindergarten-12th Grade (K-12) education has not used many features of educational technology that require significant bandwidth. This case study analyzes the availability and uses of teaching techniques and computing technologies in Grades 10, 11, and 12 Computer Applications Technology classes in a remote town in South Africa. The technologies and techniques trialed showed promise of usefulness in being more engaging to student interest than those presently used. Some students, who desired a job in IT in the future, were more motivated and remembered more than others. The technologies were a bit tricky in setting up and it was recommended that the researchers, in addition to special work sessions with the teachers, team taught with the teachers for their first time using the technologies. For advanced students, a computer club was recommended that might allow students to explore subjects and job opportunities that did not fit within their class structure. Human factors issues focussed on ease of use and intuitiveness of technologies for both teachers and students. Classes are only 50minutes and, within so short a time, if the technology becomes a hurdle rather than a vehicle for teaching a class concept, it defeats its own purpose. Thus, technologies need to be selected carefully and all supporting technology needs to be installed and ready for use. For companies developing K-12 technologies, if they have a preference for e.g., browsers, they should provide a hyperlink to the download site for their users. Also, all software should have a one-page summary of commands and software use. ICT4D, Gamification, Internet in education",human factors issues in developing country remote k 12 education remote sites in south africa can be characterized by a lack of inter city transport lack of societal infrastructure and minimal computing resources and access to them as a result kindergarten 12th grade k 12 education has not used many features of educational technology that require significant bandwidth this case study analyzes the availability and uses of teaching techniques and computing technologies in grades 10 11 and 12 computer applications technology classes in a remote town in south africa the technologies and techniques trialed showed promise of usefulness in being more engaging to student interest than those presently used some students who desired a job in it in the future were more motivated and remembered more than others the technologies were a bit tricky in setting up and it was recommended that the researchers in addition to special work sessions with the teachers team taught with the teachers for their first time using the technologies for advanced students a computer club was recommended that might allow students to explore subjects and job opportunities that did not fit within their class structure human factors issues focussed on ease of use and intuitiveness of technologies for both teachers and students classes are only 50minutes and within so short a time if the technology becomes a hurdle rather than a vehicle for teaching a class concept it defeats its own purpose thus technologies need to be selected carefully and all supporting technology needs to be installed and ready for use for companies developing k 12 technologies if they have a preference for e g browsers they should provide a hyperlink to the download site for their users also all software should have a one page summary of commands and software use ict4d gamification internet in education,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,1.0,0.0
33,0,9,198,"Betting system for formative code review in educational competitions Using competitions to motivate students is a well-known practice that has proved to be successful. Nevertheless, grading students only through their results in the competition could unfairly limit the range of grades that each student can get: regardless of the quality of the different teams participating, one student must necessarily win the tournament, another must be second, and so on until the last place. In fact, player rankings are relative assessments that are conditioned by the performance of every student. In this paper, we propose solving this issue by making students do a code review before betting on the competition. By betting, the grade of students depends both on the performance of their own solution and the one they bet on. This way, grades represent not only coding skills, but also code analysis skills, widening the attainable range of grades and allowing for a fairer grade distribution. As a result, students that are not so proficient in coding are rewarded if they demonstrate they can do a good analysis of the source code written by others, which is a very valuable skill in the professional world. We provide a case study in an undergraduate course, showing positive results. Assessment, Gamification, Competition, Software development, Code review",betting system for formative code review in educational competitions using competitions to motivate students is a well known practice that has proved to be successful nevertheless grading students only through their results in the competition could unfairly limit the range of grades that each student can get regardless of the quality of the different teams participating one student must necessarily win the tournament another must be second and so on until the last place in fact player rankings are relative assessments that are conditioned by the performance of every student in this paper we propose solving this issue by making students do a code review before betting on the competition by betting the grade of students depends both on the performance of their own solution and the one they bet on this way grades represent not only coding skills but also code analysis skills widening the attainable range of grades and allowing for a fairer grade distribution as a result students that are not so proficient in coding are rewarded if they demonstrate they can do a good analysis of the source code written by others which is a very valuable skill in the professional world we provide a case study in an undergraduate course showing positive results assessment gamification competition software development code review,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
34,0,10,210,"How Gamification Applies for Educational Purpose Specially with College Algebra Gaming environments have been used to teach mathematical topics such as addition and division in a fun manner**http://www.thefreedictionary.com/fun.. However, when it comes to college level mathematical concepts such as the use of the quadratic formula, there are very few software that explain these concepts in a fun way. In this paper, we present a first step towards using video game elements and Artificial Intelligence Tutoring system techniques to teach mathematical concepts such as factoring and the quadratic formula. These concepts are explained in a way that helps learners make a connection between the mathematical concepts and their real life experience. These methods of learning are supported by several studies (Bonwell & Eison, 1991; Donovan & Bransford, 2004; Scarlatos, 2006). We use gamification techniques during the training and test phases to help students learn the mathematical concepts. We then compare the performance of students who used our system (MathDungeon) with that of students who used the most popular math tutoring programs used in US colleges: Assessment and Learning, K-12, Higher Education (ALEKS). The number of students who used MathDungeon and scored above the median score on the test of math performance was greater than the number of students who used ALEKS and scored higher than the median score. Gamification, Artificial Intelligence, Tutoring systems, How to gamify mathematics' concepts",how gamification applies for educational purpose specially with college algebra gaming environments have been used to teach mathematical topics such as addition and division in a fun manner http www thefreedictionary com fun however when it comes to college level mathematical concepts such as the use of the quadratic formula there are very few software that explain these concepts in a fun way in this paper we present a first step towards using video game elements and artificial intelligence tutoring system techniques to teach mathematical concepts such as factoring and the quadratic formula these concepts are explained in a way that helps learners make a connection between the mathematical concepts and their real life experience these methods of learning are supported by several studies bonwell eison 1991 donovan bransford 2004 scarlatos 2006 we use gamification techniques during the training and test phases to help students learn the mathematical concepts we then compare the performance of students who used our system mathdungeon with that of students who used the most popular math tutoring programs used in us colleges assessment and learning k 12 higher education aleks the number of students who used mathdungeon and scored above the median score on the test of math performance was greater than the number of students who used aleks and scored higher than the median score gamification artificial intelligence tutoring systems how to gamify mathematics concepts,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
35,1,5,137,"Gamification of software engineering curriculum Advances in computer gaming technology, digital game design, game engine development, mobile computing, and mobile software engineering, stimulated active research on gamification of processes and activities in ""serious"" areas such as education, learning, corporate training, management, administration, marketing, simulations of complex physical objects and phenomena, engineering, project management, Wellness, healthcare, chemistry, and other areas. The performed analysis of the current status of serious games' applications in industry clearly shows that it will soon need a significant number of well educated and highly skilled specialists in gamification of main business processes, including serious games' software engineers, analysts, designers, developers, testers, etc. The findings and outcomes of performed analysis motivated the authors - faculty and graduate student at Bradley University (Peoria, IL, U.S.A.) - to work collaboratively, propose a new approach and ways of gamification of software engineering curriculum. gamification, serious games,  software engineering,  curriculum",gamification of software engineering curriculum advances in computer gaming technology digital game design game engine development mobile computing and mobile software engineering stimulated active research on gamification of processes and activities in serious areas such as education learning corporate training management administration marketing simulations of complex physical objects and phenomena engineering project management wellness healthcare chemistry and other areas the performed analysis of the current status of serious games applications in industry clearly shows that it will soon need a significant number of well educated and highly skilled specialists in gamification of main business processes including serious games software engineers analysts designers developers testers etc the findings and outcomes of performed analysis motivated the authors faculty and graduate student at bradley university peoria il u s a to work collaboratively propose a new approach and ways of gamification of software engineering curriculum gamification serious games software engineering curriculum,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
36,1,14,102,"Redesign of a Gamified Software Engineering Course Step 2 Scaffolding: Bridging the Motivation Gap This paper builds on work previously published as best paper at CSEDU 2013 [1], which describes the motivation gap between the teacher'sview ofstudent motivation and their actual motivation. As a result of this mismatch, the gamified Software Engineering course under observation [2], did not appeal to the students in the expected way. Our findings give rise to a number of design criteria for e-Learning and blended coursethat address the motivation gap in order to increase the numberstudentsthat are able to self-regulate their studies and stay or become motivated by the course as defined by Dan Pink's motivational factors: autonomy, mastery andpurpose [3]. motivation,  e-learning,  blended learning,  gamification,  software engineering,  education",redesign of a gamified software engineering course step 2 scaffolding bridging the motivation gap this paper builds on work previously published as best paper at csedu 2013 1 which describes the motivation gap between the teacher sview ofstudent motivation and their actual motivation as a result of this mismatch the gamified software engineering course under observation 2 did not appeal to the students in the expected way our findings give rise to a number of design criteria for e learning and blended coursethat address the motivation gap in order to increase the numberstudentsthat are able to self regulate their studies and stay or become motivated by the course as defined by dan pink s motivational factors autonomy mastery andpurpose 3 motivation e learning blended learning gamification software engineering education,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,1.0,0.0,0.0,0.0
37,1,11,84,"It was a bit of a race: Gamification of version control The adoption of software engineering practices cannot always be achieved by education or processes. However, social software has the potential for supporting deliberate behavior change. We present preliminary results of an experiment in which we encouraged computer science students to make more frequent commits to version control by using a social software application. We provided a web-based newsfeed of commits that also displayed a leaderboard. While we have yet to analyze the data, interviews we conducted with the participants allow for first qualitative insights. Version Control, Commits, Social Software, Motivation, Behavior Change, Gamification",it was a bit of a race gamification of version control the adoption of software engineering practices cannot always be achieved by education or processes however social software has the potential for supporting deliberate behavior change we present preliminary results of an experiment in which we encouraged computer science students to make more frequent commits to version control by using a social software application we provided a web based newsfeed of commits that also displayed a leaderboard while we have yet to analyze the data interviews we conducted with the participants allow for first qualitative insights version control commits social software motivation behavior change gamification,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,1.0,0.0,0.0,0.0,0.0
38,1,11,131,"A competitive-collaborative approach for introducing software engineering in a CS2 class Introductory Computer Science (CS) classes are typically competitive in nature. The cutthroat nature of these classes comes from students attempting to get as high a grade as possible, which may or may not correlate with actual learning. Further, there is very little collaboration allowed in most introductory CS classes. Most assignments are completed individually since many educators feel that students learn the most, especially in introductory classes, by working alone. In addition to completing ``normal'' individual assignments, which have many benefits, we wanted to expose students to collaboration early (via, for example, team projects). In this paper, we describe how we leveraged competition and collaboration in a CS2 class to help students learn aspects of computer science better - in this case, good software design and software testing - and summarize student feedback. Games, Educational institutions, Java, Programming, Collaboration, Software testing, computer science education, groupware, program testing, competitive-collaborative approach, software engineering, CS2 class, introductory computer science classes, CS classes, software design, software testing, student feedback",a competitive collaborative approach for introducing software engineering in a cs2 class introductory computer science cs classes are typically competitive in nature the cutthroat nature of these classes comes from students attempting to get as high a grade as possible which may or may not correlate with actual learning further there is very little collaboration allowed in most introductory cs classes most assignments are completed individually since many educators feel that students learn the most especially in introductory classes by working alone in addition to completing normal individual assignments which have many benefits we wanted to expose students to collaboration early via for example team projects in this paper we describe how we leveraged competition and collaboration in a cs2 class to help students learn aspects of computer science better in this case good software design and software testing and summarize student feedback games educational institutions java programming collaboration software testing computer science education groupware program testing competitive collaborative approach software engineering cs2 class introductory computer science classes cs classes software design software testing student feedback,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,1.0,0.0,0.0,0.0
39,1,8,95,"CodeSmellExplorer: Tangible exploration of code smells and refactorings CodeSmellExplorer is an interactive exploration and learning tool for code smells and associated refactorings, used on a tabletop. The evaluation of our University course about good coding practices shows that undergraduate students frequently fail to recognize bad coding practices without prior training. However, the results also confirmed that gamification elements, such as coding challenges, are regarded as interesting and stimulating. CodeSmellExplorer is an attempt to familiarize users with good coding practices by visualizing an interactive graph network of code smells and connected refactorings. Users can explore those relationships or start challenges with built-in feedback systems. Code smell, refactoring, clean code, tangible interaction, tabletop, visualization",codesmellexplorer tangible exploration of code smells and refactorings codesmellexplorer is an interactive exploration and learning tool for code smells and associated refactorings used on a tabletop the evaluation of our university course about good coding practices shows that undergraduate students frequently fail to recognize bad coding practices without prior training however the results also confirmed that gamification elements such as coding challenges are regarded as interesting and stimulating codesmellexplorer is an attempt to familiarize users with good coding practices by visualizing an interactive graph network of code smells and connected refactorings users can explore those relationships or start challenges with built in feedback systems code smell refactoring clean code tangible interaction tabletop visualization,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,1.0,0.0,0.0,0.0,0.0
40,1,9,152,"Implementing a Gamified application for a Risk Management course Gamification is a technique that, through the use of game elements, encourages users to learn and create opportunities to explore issues that necessarily must be approached from a theoretical perspective. For example, theories related to risk management. This work implements a proposal of a Gamified Web Application to strengthen the teaching of risk management. The building of the application focuses particularly on the stages of identification, analysis and mitigation of risks in technological projects. The findings of this study shows, through the use of decision tree, why Gamification is a suitable framework for the issues raised in comparison with other game based learning techniques. In addition to the theoretical contribution, the study provides an implementation of a web application, built according to Gamification Framework 6D. The application can be used to teach risk management and for future experimentation use to prove the effectiveness of Gamification in contrast to a traditional teaching method. computer aided instruction, computer games, educational courses, Internet, risk management, teaching, risk management course, gamified Web application, teaching, risk management, game based learning techniques, Games, Risk management, Education, Decision trees, Context, Proposals, Software engineering, Gamification, Risk management, 6d Framework, Game based learning, Game elements",implementing a gamified application for a risk management course gamification is a technique that through the use of game elements encourages users to learn and create opportunities to explore issues that necessarily must be approached from a theoretical perspective for example theories related to risk management this work implements a proposal of a gamified web application to strengthen the teaching of risk management the building of the application focuses particularly on the stages of identification analysis and mitigation of risks in technological projects the findings of this study shows through the use of decision tree why gamification is a suitable framework for the issues raised in comparison with other game based learning techniques in addition to the theoretical contribution the study provides an implementation of a web application built according to gamification framework 6d the application can be used to teach risk management and for future experimentation use to prove the effectiveness of gamification in contrast to a traditional teaching method computer aided instruction computer games educational courses internet risk management teaching risk management course gamified web application teaching risk management game based learning techniques games risk management education decision trees context proposals software engineering gamification risk management 6d framework game based learning game elements,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
41,1,10,128,"Designing game-like activities to engage adult learners in higher education Both engagement and motivation are important factors in any learning process. Fortunately, there are different approaches worth considering during the design process of learning experiences that could help educators create engagement. One that has shown great potential is the inclusion of game design principles, or game-like experiences, in a curriculum. This paper presents the design and analysis of an e-learning activity within a software engineering course that relies on the application of such an approach as its motivational foundation from a purely educational standpoint (i.e. not as entertainment). The goal was to encourage adult learners to solve non-graded formative activities and to increase their sense of kinship to the class group. After one semester, the results revealed a positive assessment of the experience designed and student engagement. Gamification, higher education,  eLearning,  software engineering,  adult learners",designing game like activities to engage adult learners in higher education both engagement and motivation are important factors in any learning process fortunately there are different approaches worth considering during the design process of learning experiences that could help educators create engagement one that has shown great potential is the inclusion of game design principles or game like experiences in a curriculum this paper presents the design and analysis of an e learning activity within a software engineering course that relies on the application of such an approach as its motivational foundation from a purely educational standpoint i e not as entertainment the goal was to encourage adult learners to solve non graded formative activities and to increase their sense of kinship to the class group after one semester the results revealed a positive assessment of the experience designed and student engagement gamification higher education elearning software engineering adult learners,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
42,1,11,178,"Game Elements in a Software Engineering Study Group: A Case Study This paper presents a case study of a gamified learning experience, designed with a guiding gamification framework, for a software engineering study group. The group was formed to evaluate the learning experience in a laboratory-like setting, and the results are intended to inform the design process. Grounded-theory procedures were used to analyze qualitative data about students' perceptions of the gamified experience. Students reported positive effects such as improved content comprehension, retention, and recap. They also highlighted a positive change in the study dynamics, especially due to the practical application of concepts, the game-like experience and a reduced amount of time for studying. The latter, however, was associated with a specific type of challenge proposed as part of the gamified structure. The other type of challenge, actually, made them face difficulties related to a lack of time. They also did not progress to higher levels of evolution proposed in the gamified structure. These are indicative of the need to improve the learning experience. These improvements, also discussed in this paper, will be evaluated in real settings in future work. Software Engineering Education, Gamification, Grounded-Theory",game elements in a software engineering study group a case study this paper presents a case study of a gamified learning experience designed with a guiding gamification framework for a software engineering study group the group was formed to evaluate the learning experience in a laboratory like setting and the results are intended to inform the design process grounded theory procedures were used to analyze qualitative data about students perceptions of the gamified experience students reported positive effects such as improved content comprehension retention and recap they also highlighted a positive change in the study dynamics especially due to the practical application of concepts the game like experience and a reduced amount of time for studying the latter however was associated with a specific type of challenge proposed as part of the gamified structure the other type of challenge actually made them face difficulties related to a lack of time they also did not progress to higher levels of evolution proposed in the gamified structure these are indicative of the need to improve the learning experience these improvements also discussed in this paper will be evaluated in real settings in future work software engineering education gamification grounded theory,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,0.0
43,1,10,86,"Implementing gamification techniques into university study path - A case study This article describes an attempt to check whether gamification is applicable to different courses in higher education and what are the results of such application. An experiment (involving over 100 students of computer science at Lublin University of Technology) implementing some of the gamification techniques into two different courses - software engineering and service-oriented architecture - was performed during two academic years 2011/2012 and 2012/2013. This article provides the description of the experiment and comparative analysis of its results in both gamified and non-gamified (control) groups. gamification, didactics, teaching techniques",implementing gamification techniques into university study path a case study this article describes an attempt to check whether gamification is applicable to different courses in higher education and what are the results of such application an experiment involving over 100 students of computer science at lublin university of technology implementing some of the gamification techniques into two different courses software engineering and service oriented architecture was performed during two academic years 2011 2012 and 2012 2013 this article provides the description of the experiment and comparative analysis of its results in both gamified and non gamified control groups gamification didactics teaching techniques,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,1.0,0.0
44,1,9,339,"Practice makes perfect -- Gamification of a competitive learning experience The ability to provide and implement software solutions is a fundamental component of a computer scientist curriculum. Commonly referred to as the ability to program, this task involves the development of programs to address everyday problems. Over the last decade teaching practices have evolved alongside programming languages to facilitate the learning process. While abstracting the level of understanding has helped students with the fundamentals of software development, issues related to students' engagement and motivation are still not adequately addressed. With motivation being a vital component of the students' life cycle and at the basis of their engagement, the concept of software engineering introduced in the class needs to be revised and become more engaging so as to be practised thoroughly by the students. To address these challenges, educators have devised numerous frameworks to allow students to hone their programming skills. The idea of embedding gaming aspects into the learning cycle has led to the development of techniques such as serious games and game-based learning, while more recent techniques have been unified under the term gamification. Several researchers have incorporated the gamification concept into computer science classes in order to improve students' engagement with the teaching material, with early evaluations confirming the effectiveness of this approach. The present study focuses on the use of a gamification platform to create stimulating content and increase motivation. Students were presented with a new gamification system designed to attract and hold their attention through a number of programming challenges in the form of a contest. The results of the experiment demonstrate the students' behavioural changes towards a deeper cognitive engagement. The paper then further discusses the challenges that have arisen in this new learning environment, such as demotivation of students with low contest rankings. Teaching how to write good software has been part of an ongoing debate for the last decade. With student motivation being a central component, this paper discusses the use of a gamification environment to engage students with the teaching material and reinforce the concepts of software engineering introduced in class. Gamification,  Motivation,  Engagement,  Programming Education",practice makes perfect gamification of a competitive learning experience the ability to provide and implement software solutions is a fundamental component of a computer scientist curriculum commonly referred to as the ability to program this task involves the development of programs to address everyday problems over the last decade teaching practices have evolved alongside programming languages to facilitate the learning process while abstracting the level of understanding has helped students with the fundamentals of software development issues related to students engagement and motivation are still not adequately addressed with motivation being a vital component of the students life cycle and at the basis of their engagement the concept of software engineering introduced in the class needs to be revised and become more engaging so as to be practised thoroughly by the students to address these challenges educators have devised numerous frameworks to allow students to hone their programming skills the idea of embedding gaming aspects into the learning cycle has led to the development of techniques such as serious games and game based learning while more recent techniques have been unified under the term gamification several researchers have incorporated the gamification concept into computer science classes in order to improve students engagement with the teaching material with early evaluations confirming the effectiveness of this approach the present study focuses on the use of a gamification platform to create stimulating content and increase motivation students were presented with a new gamification system designed to attract and hold their attention through a number of programming challenges in the form of a contest the results of the experiment demonstrate the students behavioural changes towards a deeper cognitive engagement the paper then further discusses the challenges that have arisen in this new learning environment such as demotivation of students with low contest rankings teaching how to write good software has been part of an ongoing debate for the last decade with student motivation being a central component this paper discusses the use of a gamification environment to engage students with the teaching material and reinforce the concepts of software engineering introduced in class gamification motivation engagement programming education,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
45,1,12,147,"Gamification for Engaging Computer Science Students in Learning Activities: A Case Study Gamification is the use of game design elements in non-game settings to engage participants and encourage desired behaviors. It has been identified as a promising technique to improve students' engagement which could have a positive impact on learning. This study evaluated the learning effectiveness and engagement appeal of a gamified learning activity targeted at the learning of C-programming language. Furthermore, the study inquired into which gamified learning activities were more appealing to students. The study was conducted using the mixed-method sequential explanatory protocol. The data collected and analysed included logs, questionnaires, and pre- and post-tests. The results of the evaluation show positive effects on the engagement of students toward the gamified learning activities and a moderate improvement in learning outcomes. Students reported different motivations for continuing and stopping activities once they completed the mandatory assignment. The preferences for different gamified activities were also conditioned by academic milestones. E-learning, engagement, game mechanics, game dynamics, gamification",gamification for engaging computer science students in learning activities a case study gamification is the use of game design elements in non game settings to engage participants and encourage desired behaviors it has been identified as a promising technique to improve students engagement which could have a positive impact on learning this study evaluated the learning effectiveness and engagement appeal of a gamified learning activity targeted at the learning of c programming language furthermore the study inquired into which gamified learning activities were more appealing to students the study was conducted using the mixed method sequential explanatory protocol the data collected and analysed included logs questionnaires and pre and post tests the results of the evaluation show positive effects on the engagement of students toward the gamified learning activities and a moderate improvement in learning outcomes students reported different motivations for continuing and stopping activities once they completed the mandatory assignment the preferences for different gamified activities were also conditioned by academic milestones e learning engagement game mechanics game dynamics gamification,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
46,1,11,109,"Personalized Rooms Based Recommendation as a Mean for Increasing Students' Activity In this paper we present a novel method of navigation in an educational system based on game mechanics levels. We propose a concept called rooms. More precisely, we introduce a navigation based on personalized rooms as a part of gameplay design. The room is represented by a set of items (learning objects) selected adaptively. Its main purpose is a presentation of the recommended items in a series of small sets, which supports activity of students. In gameplay design we focus on supporting students' motivation which is the key to increase students' activity. We evaluate our approach using mobile version of an adaptive learning system ALEF in software engineering domain. Personalized navigation, Gamification, Motivation, Support of activity, Personalized recommendation, Levels, Gameplay design",personalized rooms based recommendation as a mean for increasing students activity in this paper we present a novel method of navigation in an educational system based on game mechanics levels we propose a concept called rooms more precisely we introduce a navigation based on personalized rooms as a part of gameplay design the room is represented by a set of items learning objects selected adaptively its main purpose is a presentation of the recommended items in a series of small sets which supports activity of students in gameplay design we focus on supporting students motivation which is the key to increase students activity we evaluate our approach using mobile version of an adaptive learning system alef in software engineering domain personalized navigation gamification motivation support of activity personalized recommendation levels gameplay design,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
47,1,7,123,"Improving programming education through gameful, formative feedback In this paper we present a newly developed online learning platform which introduces gamification elements into software engineering education. Starting from assumptions based on cognitive load theory we present the design of an online gamification-based training system to be used in software engineering contexts. Students can voluntarily solve challenges for which they may earn credits. These small problems serve as assessments; the approach follows the assessment for learning paradigm in that assessments provide formative feedback to enhance the learning experience. The combination of formative assessment and gamification is new to software engineering education. We describe system design as well as the different types of challenges in detail. We also provide several examples for actual challenges used in an object-oriented programming introduction using Java. cognition, computer aided instruction, computer games, computer science education, Internet, Java, object-oriented programming, software engineering, programming education, online learning platform, gamification-based training system, software engineering education, cognitive load theory, formative feedback assessment, object-oriented programming, Java, Programming profession, Games, Education, Java, Software engineering, Context, learning, cognitive laod theory, gamification, object-oriented programming, assessment for learning, Java, online web-based self-assessment Introduction (Heading 1)",improving programming education through gameful formative feedback in this paper we present a newly developed online learning platform which introduces gamification elements into software engineering education starting from assumptions based on cognitive load theory we present the design of an online gamification based training system to be used in software engineering contexts students can voluntarily solve challenges for which they may earn credits these small problems serve as assessments the approach follows the assessment for learning paradigm in that assessments provide formative feedback to enhance the learning experience the combination of formative assessment and gamification is new to software engineering education we describe system design as well as the different types of challenges in detail we also provide several examples for actual challenges used in an object oriented programming introduction using java cognition computer aided instruction computer games computer science education internet java object oriented programming software engineering programming education online learning platform gamification based training system software engineering education cognitive load theory formative feedback assessment object oriented programming java programming profession games education java software engineering context learning cognitive laod theory gamification object oriented programming assessment for learning java online web based self assessment introduction heading 1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
48,1,7,261,"Gamification-Based Cyber-Enabled Learning Environment of Software Testing Gamification is a new emerging technology in high level education to engage students into to non-game context in a horizon of four to five years. Cyber enabled learning environment provides a collaborative and sustainable platform for learners to continue studying context outside classroom and lecturing time. However, one of the challenges faced by cyber enabled virtual learning environment is student engagement and motivation. In this paper, we presented the study and results of improving student engagement and motivation by integrating design mechanisms of gamification to WReSTT-CyLE -- a high level software testing learning environment. The data collected and the experimental results of class studies were performed at Alabama A&M University in the past year in several sessions. A wide assessment of gamification for student engagement using WReSTT-CyLE tool was investigated and discussed in several categories. To demonstrate how to apply gamification technology to the student classes, a class design and revised syllabus with teaching modules were presented. WReSTT-CyLE is a highly integrated environment that synthesizes several key concepts including social media, collaborative learning, and learning objects to support student learning software testing concepts effectively and efficiently. From this experimental study, we have observed the support of student engagement from the social factors that were built in WReSTT-CyLE. In this paper, we focus on the design architecture of gamification, assessment, and analysis of effectiveness of WReSTT-CyLE based on our study results. Our study results has demonstrated a successful model and guideline for the educators and researchers to implement and synthesize gamification to the cyber enabled virtual learning environment in other STEM subjects. []",gamification based cyber enabled learning environment of software testing gamification is a new emerging technology in high level education to engage students into to non game context in a horizon of four to five years cyber enabled learning environment provides a collaborative and sustainable platform for learners to continue studying context outside classroom and lecturing time however one of the challenges faced by cyber enabled virtual learning environment is student engagement and motivation in this paper we presented the study and results of improving student engagement and motivation by integrating design mechanisms of gamification to wrestt cyle a high level software testing learning environment the data collected and the experimental results of class studies were performed at alabama a m university in the past year in several sessions a wide assessment of gamification for student engagement using wrestt cyle tool was investigated and discussed in several categories to demonstrate how to apply gamification technology to the student classes a class design and revised syllabus with teaching modules were presented wrestt cyle is a highly integrated environment that synthesizes several key concepts including social media collaborative learning and learning objects to support student learning software testing concepts effectively and efficiently from this experimental study we have observed the support of student engagement from the social factors that were built in wrestt cyle in this paper we focus on the design architecture of gamification assessment and analysis of effectiveness of wrestt cyle based on our study results our study results has demonstrated a successful model and guideline for the educators and researchers to implement and synthesize gamification to the cyber enabled virtual learning environment in other stem subjects,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,0.0,0.0,1.0
49,1,6,174,"Understanding gamification mechanisms for software development In this paper we outline the idea to adopt gamification techniques to engage, train, monitor, and motivate all the players involved in the development of complex software artifacts, from the inception to the deployment and maintenance. The paper introduces the concept of gamification and proposes a research approach to understand how its principles may be successfully applied to the process of software development. Applying gamification to software engineering is not as straightforward as it may appear since it has to be casted to the peculiarities of this domain. Existing literature in the area has already recognized the possible use of such technology in the context of software development, however how to design and use gamification in this context is still an open question. This leads to several research challenges which are organized in a fascinating research agenda that is part of the contribution of this paper. Finally, to support the proposed ideas we present a preliminary experiment that shows the effect of gamification on the performance of students involved in a software engineering project. Software Engineering, Management, Human factors, Software development, gamification, serious games, reward",understanding gamification mechanisms for software development in this paper we outline the idea to adopt gamification techniques to engage train monitor and motivate all the players involved in the development of complex software artifacts from the inception to the deployment and maintenance the paper introduces the concept of gamification and proposes a research approach to understand how its principles may be successfully applied to the process of software development applying gamification to software engineering is not as straightforward as it may appear since it has to be casted to the peculiarities of this domain existing literature in the area has already recognized the possible use of such technology in the context of software development however how to design and use gamification in this context is still an open question this leads to several research challenges which are organized in a fascinating research agenda that is part of the contribution of this paper finally to support the proposed ideas we present a preliminary experiment that shows the effect of gamification on the performance of students involved in a software engineering project software engineering management human factors software development gamification serious games reward,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0.0,0.0,1.0,0.0,0.0,0.0
50,1,7,160,"Towards a generic gamification of sorting algorithms Computer science disciplines are very important in the context of an emerging IT industry especially in the Eastern Europe countries where lots of companies invested in research and development sites. The need for highly qualified specialists is very acute and is expressed in several occasions as a request addressed to universities to double the number of bachelor graduates. In this sense universities try to adapt and they provide distance learning programs. In this context all the advantages of software must be used: generative learning objects, gamifications etc. A gamification model for sorting algorithms is proposed in this sense in order to exercise the logic steps of programming and algorithms thus triggering a way of thinking that is needed in the creation of new software. To motivate the student in performing the exercise we used some elements of game mechanics like score and difficulty levels. All the newly created e-learning models are provided to the student through an online Web application. computer aided instruction, computer games, computer science education, educational institutions, programming, software engineering, sorting, generic gamification, sorting algorithm, eastern Europe countries, bachelor graduates, distance learning programs, generative learning objects, programming logic steps, algorithms logic steps, game mechanics, difficulty levels, game score, e-learning models, online Web application, Sorting, Electronic learning, Computational modeling, Object oriented modeling, Context, Computer science, Manuals, gamification, computer science disciplines, scores",towards a generic gamification of sorting algorithms computer science disciplines are very important in the context of an emerging it industry especially in the eastern europe countries where lots of companies invested in research and development sites the need for highly qualified specialists is very acute and is expressed in several occasions as a request addressed to universities to double the number of bachelor graduates in this sense universities try to adapt and they provide distance learning programs in this context all the advantages of software must be used generative learning objects gamifications etc a gamification model for sorting algorithms is proposed in this sense in order to exercise the logic steps of programming and algorithms thus triggering a way of thinking that is needed in the creation of new software to motivate the student in performing the exercise we used some elements of game mechanics like score and difficulty levels all the newly created e learning models are provided to the student through an online web application computer aided instruction computer games computer science education educational institutions programming software engineering sorting generic gamification sorting algorithm eastern europe countries bachelor graduates distance learning programs generative learning objects programming logic steps algorithms logic steps game mechanics difficulty levels game score e learning models online web application sorting electronic learning computational modeling object oriented modeling context computer science manuals gamification computer science disciplines scores,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0.0,0.0,0.0,0.0,0.0,1.0
51,1,5,55,"Gamification in educational software development Software development education often suffers from the image of tedious programming, leading to low levels of activity. In general, gamification can help making tasks more attractive. This paper reports on a gamification case study, indicating that the use of gamification may be an effective instrument to increase the activity of students in Educational Software Development. Education, Experimentation, Gamification, Education, Software Development, Engagement, Involvement, Motivation",gamification in educational software development software development education often suffers from the image of tedious programming leading to low levels of activity in general gamification can help making tasks more attractive this paper reports on a gamification case study indicating that the use of gamification may be an effective instrument to increase the activity of students in educational software development education experimentation gamification education software development engagement involvement motivation,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0.0,0.0,0.0,1.0,0.0,0.0
52,1,18,170,"Gamification of a Software Engineering course and a detailed analysis of the factors that lead to it's failure This paper describes the setup for a gamified classroom for the subject of Software Engineering. A series of papers have resulted from this work: ``Understanding Student Motivation'' at CSEDU 2013 [1] and ``Bridging the Motivation Gap'', an IGIP SPEED Young Scientist award paper here at ICL 2013 [2]. The intention behind gamifying the course was to increase student engagement and motivation by allowing for independent learning with flexible speed and choice of emphasis. Daniel Pink's [3] motivational theory, which is also found in gamification factors, outlines that autonomy, mastery and purpose lead to these goals. The adopted approach also deals nicely with the vast differences regarding background knowledge and the spread of interest of each of the students. During the latter part of the course a student survey was conducted. Out of 90 students, 59 answered. As a general rule, students did not receive the gamification ideas in a positive light. We examine what went wrong regarding the gamification factors and propose changes for the next iteration of the course. motivation, e-learning, blended learning, gamification, software engineering, education",gamification of a software engineering course and a detailed analysis of the factors that lead to it s failure this paper describes the setup for a gamified classroom for the subject of software engineering a series of papers have resulted from this work understanding student motivation at csedu 2013 1 and bridging the motivation gap an igip speed young scientist award paper here at icl 2013 2 the intention behind gamifying the course was to increase student engagement and motivation by allowing for independent learning with flexible speed and choice of emphasis daniel pink s 3 motivational theory which is also found in gamification factors outlines that autonomy mastery and purpose lead to these goals the adopted approach also deals nicely with the vast differences regarding background knowledge and the spread of interest of each of the students during the latter part of the course a student survey was conducted out of 90 students 59 answered as a general rule students did not receive the gamification ideas in a positive light we examine what went wrong regarding the gamification factors and propose changes for the next iteration of the course motivation e learning blended learning gamification software engineering education,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,1.0,0.0,0.0,0.0
53,1,11,62,"Engaging students with a mobile game-based learning system in university education In this contribution we present a game-based learning concept which is based on mobile devices. It focuses a joyful stabilization of knowledge and the engagement of students using the Gamification approach and its game mechanics. Previous findings how to promote students' motivation are adapted in the mobile context and discussed. Steps for the realization of the concept in a university are described. Game-Based Learning, Gamification, Mobile Learning, Motivation, University Education",engaging students with a mobile game based learning system in university education in this contribution we present a game based learning concept which is based on mobile devices it focuses a joyful stabilization of knowledge and the engagement of students using the gamification approach and its game mechanics previous findings how to promote students motivation are adapted in the mobile context and discussed steps for the realization of the concept in a university are described game based learning gamification mobile learning motivation university education,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0.0,0.0,0.0,1.0,0.0,0.0
54,1,10,75,"Gamifying the learning of design patterns in software engineering education In this contribution a process and a way for a standardized documentation are proposed for the creation of gamified and competency-based learning activities. Furthermore the application of the process and its documentation is described by using an exemplary learning activity which was created, implemented and evaluated. The findings indicate, that the use of gamification design elements for learning a design pattern can be effective and successful and can lead to an increase in learning motivation. computer science education, software engineering, design patterns, software engineering education, standardized documentation, competency-based learning activities, exemplary learning activity, gamification design elements, Games, Context, Companies, Electronic mail, Documentation, Measurement, Education, Gamification, Learning, Software Engineering, Design Patterns, Competences",gamifying the learning of design patterns in software engineering education in this contribution a process and a way for a standardized documentation are proposed for the creation of gamified and competency based learning activities furthermore the application of the process and its documentation is described by using an exemplary learning activity which was created implemented and evaluated the findings indicate that the use of gamification design elements for learning a design pattern can be effective and successful and can lead to an increase in learning motivation computer science education software engineering design patterns software engineering education standardized documentation competency based learning activities exemplary learning activity gamification design elements games context companies electronic mail documentation measurement education gamification learning software engineering design patterns competences,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0.0,0.0,0.0,0.0,0.0,1.0
55,1,14,92,"Enhancing software engineering student team engagement in a high-intensity extreme programming course using gamification The use of game thinking and game mechanics in non-gaming context is becoming more and more popular. This has been known as gamification. Recent studies have shown that this attempt seems very promising in different areas. In this paper we explore the value of gamification in a software development team. This paper describes one approach to add gamification into the software development process in teams of ten students each. We have conducted a gamification study with 50 volunteer students. In this paper we explain the rules, terms, and findings of this study. Software, Games, Programming, Educational institutions, Atmospheric measurements, Particle measurements, computer science education, educational courses, programming, software engineering, team working, computer science education , educational courses , programming , software engineering , team working computer science education , educational courses , programming , software engineering , team working software engineering student team engagement, high-intensity extreme programming course, gamification, game thinking, game mechanics, nongaming context, software development team, software development process",enhancing software engineering student team engagement in a high intensity extreme programming course using gamification the use of game thinking and game mechanics in non gaming context is becoming more and more popular this has been known as gamification recent studies have shown that this attempt seems very promising in different areas in this paper we explore the value of gamification in a software development team this paper describes one approach to add gamification into the software development process in teams of ten students each we have conducted a gamification study with 50 volunteer students in this paper we explain the rules terms and findings of this study software games programming educational institutions atmospheric measurements particle measurements computer science education educational courses programming software engineering team working computer science education educational courses programming software engineering team working computer science education educational courses programming software engineering team working software engineering student team engagement high intensity extreme programming course gamification game thinking game mechanics nongaming context software development team software development process,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.0,0.0,0.0,1.0,0.0,0.0
